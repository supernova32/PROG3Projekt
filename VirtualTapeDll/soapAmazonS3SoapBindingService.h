/* soapAmazonS3SoapBindingService.h
   Generated by gSOAP 2.8.4 from AmazonS3.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapAmazonS3SoapBindingService_H
#define soapAmazonS3SoapBindingService_H
#include "soapH.h"
class SOAP_CMAC AmazonS3SoapBindingService
{ public:
	struct soap *soap;
	bool own;
	/// Constructor
	AmazonS3SoapBindingService();
	/// Constructor to use/share an engine state
	AmazonS3SoapBindingService(struct soap*);
	/// Constructor with engine input+output mode control
	AmazonS3SoapBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	AmazonS3SoapBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~AmazonS3SoapBindingService();
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Initializer used by constructor
	virtual	void AmazonS3SoapBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	AmazonS3SoapBindingService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'CreateBucket' (returns error code or SOAP_OK)
	virtual	int CreateBucket(_ns1__CreateBucket *ns1__CreateBucket, _ns1__CreateBucketResponse *ns1__CreateBucketResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteBucket' (returns error code or SOAP_OK)
	virtual	int DeleteBucket(_ns1__DeleteBucket *ns1__DeleteBucket, _ns1__DeleteBucketResponse *ns1__DeleteBucketResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetObjectAccessControlPolicy' (returns error code or SOAP_OK)
	virtual	int GetObjectAccessControlPolicy(_ns1__GetObjectAccessControlPolicy *ns1__GetObjectAccessControlPolicy, _ns1__GetObjectAccessControlPolicyResponse *ns1__GetObjectAccessControlPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetBucketAccessControlPolicy' (returns error code or SOAP_OK)
	virtual	int GetBucketAccessControlPolicy(_ns1__GetBucketAccessControlPolicy *ns1__GetBucketAccessControlPolicy, _ns1__GetBucketAccessControlPolicyResponse *ns1__GetBucketAccessControlPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetObjectAccessControlPolicy' (returns error code or SOAP_OK)
	virtual	int SetObjectAccessControlPolicy(_ns1__SetObjectAccessControlPolicy *ns1__SetObjectAccessControlPolicy, _ns1__SetObjectAccessControlPolicyResponse *ns1__SetObjectAccessControlPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetBucketAccessControlPolicy' (returns error code or SOAP_OK)
	virtual	int SetBucketAccessControlPolicy(_ns1__SetBucketAccessControlPolicy *ns1__SetBucketAccessControlPolicy, _ns1__SetBucketAccessControlPolicyResponse *ns1__SetBucketAccessControlPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetObject' (returns error code or SOAP_OK)
	virtual	int GetObject(_ns1__GetObject *ns1__GetObject, _ns1__GetObjectResponse *ns1__GetObjectResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetObjectExtended' (returns error code or SOAP_OK)
	virtual	int GetObjectExtended(_ns1__GetObjectExtended *ns1__GetObjectExtended, _ns1__GetObjectExtendedResponse *ns1__GetObjectExtendedResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'PutObject' (returns error code or SOAP_OK)
	virtual	int PutObject(_ns1__PutObject *ns1__PutObject, _ns1__PutObjectResponse *ns1__PutObjectResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'PutObjectInline' (returns error code or SOAP_OK)
	virtual	int PutObjectInline(_ns1__PutObjectInline *ns1__PutObjectInline, _ns1__PutObjectInlineResponse *ns1__PutObjectInlineResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteObject' (returns error code or SOAP_OK)
	virtual	int DeleteObject(_ns1__DeleteObject *ns1__DeleteObject, _ns1__DeleteObjectResponse *ns1__DeleteObjectResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ListBucket' (returns error code or SOAP_OK)
	virtual	int ListBucket(_ns1__ListBucket *ns1__ListBucket, _ns1__ListBucketResponse *ns1__ListBucketResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ListAllMyBuckets' (returns error code or SOAP_OK)
	virtual	int ListAllMyBuckets(_ns1__ListAllMyBuckets *ns1__ListAllMyBuckets, _ns1__ListAllMyBucketsResponse *ns1__ListAllMyBucketsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetBucketLoggingStatus' (returns error code or SOAP_OK)
	virtual	int SetBucketLoggingStatus(_ns1__SetBucketLoggingStatus *ns1__SetBucketLoggingStatus, _ns1__SetBucketLoggingStatusResponse *ns1__SetBucketLoggingStatusResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetBucketLoggingStatus' (returns error code or SOAP_OK)
	virtual	int GetBucketLoggingStatus(_ns1__GetBucketLoggingStatus *ns1__GetBucketLoggingStatus, _ns1__GetBucketLoggingStatusResponse *ns1__GetBucketLoggingStatusResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CopyObject' (returns error code or SOAP_OK)
	virtual	int CopyObject(_ns1__CopyObject *ns1__CopyObject, _ns1__CopyObjectResponse *ns1__CopyObjectResponse) SOAP_PURE_VIRTUAL;
};
#endif
